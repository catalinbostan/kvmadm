#!/usr/bin/env perl

use FindBin;
# PERL5LIB
use lib "$FindBin::Bin/../lib";
use strict;
use warnings;

use Pod::Usage;
use File::Temp qw(tempfile);
use JSON::PP;
use KVMadm::Config;

my $kvmConfig = KVMadm::Config->new();#debug => 1);

sub editConfig {
    my $config = shift;
    my $configJSON = JSON::PP->new->pretty->encode($config);

    my ($fh, $filename) = tempfile();
    print $fh "$configJSON\n";
    close $fh;

    my $modified = (stat $filename)[9];

    my $editor = $ENV{VISUAL} || $ENV{EDITOR} || '/usr/bin/vi';
    system($editor, $filename) and die "ERROR: executing editor\n";

    $configJSON = '';
    open $fh, "<$filename" or die "ERROR: cannot open temp file $filename\n";
    while (my $config = <$fh>){
        chomp $config;
        $configJSON .= "$config\n";
    }
    close $fh;
    $modified = (stat $filename)[9] != $modified;
    unlink $filename;

    return ($modified, JSON::PP->new->decode($configJSON));
}

sub writeConfig {
    my $kvmName = shift;
    my $config = shift;
    my $create = shift;

    my $configValid = 0;

    while(!$configValid){
        local $@;
        eval {
            local $SIG{__DIE__};
            $kvmConfig->writeConfig($kvmName, $config);
        };
        if($@){
            print "$@\n\n";
            print "Do you want to retry [Y/n]? ";
            my $check = <STDIN>;

            $configValid = $check =~ /^n(?:o)?$/i
        }
        else{
            $configValid = 1;
        }
    }
}

sub main {
    my $mainOpt = shift;
    
    defined $mainOpt or pod2usage(1);


    for ($mainOpt){

    /^create$/ && do {
        my $kvmName = shift @ARGV;
        defined $kvmName or pod2usage(1);

        my $config = $kvmConfig->getTemplate;
        $config->{hostname} = $kvmName;
        (undef, $config) = editConfig($config); 

        $kvmConfig->createKVM($kvmName, $config);
        last; 
    };
    /^edit$/ && do {
        my $kvmName = shift @ARGV;
        defined $kvmName or pod2usage(1);

        my $config = $kvmConfig->readConfig($kvmName);
        (my $modified, $config) = editConfig($config);

        last if !$modified;

        $kvmConfig->writeConfig($kvmName, $config);
        last;
    };
    /^delete$/ && do {
        my $kvmName = shift @ARGV;
        defined $kvmName or pod2usage(1);

        $kvmConfig->removeKVM($kvmName);
        last;
    };
    /^list$/ && do {
        my $kvmName = shift @ARGV;

        my $kvmConf = $kvmConfig->listKVM($kvmName);
        for my $key (keys %$kvmConf){
            print "*** $key ***\n";
            print JSON::PP->new->pretty->encode($kvmConf->{$key});
            print "\n";
        }
        last;
    };
    /^export$/ && do {
        my $kvmName = shift @ARGV;

        print JSON::PP->new->pretty->encode($kvmConfig->listKVM($kvmName));
        last;
    };
    /^man$/ && do {
        pod2usage(-exitstatus => 0, -verbose => 2);

        last;
    };
    /^help$/ && do {
        pod2usage(-exitval => 'NOEXIT');

        last;
    };
        #main argument invalid
        pod2usage(1);
    }
    return 1;
}

main(shift);

1;

__END__

=head1 NAME

kvmadm - Manage KVMs under SMF control

=head1 SYNOPSIS

B<kvmadm> I<command> [I<options...>]

where 'command' is one of the following:

    create [-f <file>] <kvm_name>

    delete <kvm_name>

    edit   <kvm_name>

    list [kvm_name]

    export [kvm_name]

    help

    man

=head1 DESCRIPTION

Use kvmadm to create/edit your KVMs under SMF control

=head2 B<create>

=head2 B<delete>

=head2 B<edit>

=head2 B<list>

=head2 B<export>

=head1 EXAMPLES

=head1 COPYRIGHT

Copyright (c) 2014 by OETIKER+PARTNER AG. All rights reserved.

=head1 LICENSE

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option)
any later version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.

You should have received a copy of the GNU General Public License along with
this program. If not, see L<http://www.gnu.org/licenses/>.

=head1 AUTHOR

S<Tobias Oetiker E<lt>tobi@oetiker.chE<gt>>
S<Dominik Hassler E<lt>hadfl@cpan.orgE<gt>>

=head1 HISTORY

2014-10-03 had Initial Version

=cut
